/*!
 * vue-shave v1.0.0
 * git+https://github.com/quantity-digital/vue-shave.git
 * Released under the MIT License.
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("shave/dist/shave")):"function"==typeof define&&define.amd?define(["shave/dist/shave"],t):e.VueShave=t(e.shave)}(this,function(e){"use strict";e=e&&"default"in e?e.default:e;var t=function(e,t,n){var r=!1;return function(){var s=n&&!r,i=this,a=arguments;if(r||(r=!0,setTimeout(function(){return r=!1,e.apply(i,a)},t)),s)return e.apply(this,arguments)}},n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};return{shavers:[],defaults:{height:100,throttle:300,spaces:null,character:null},settings:{},install:function(r,s){var i=this;this.settings=n({},this.defaults,s);var a=t(this.runShavers.bind(this),this.settings.throttle),h=this;window&&window.addEventListener("load",function(){return i.runShavers()}),r.directive("shave",{bind:function(t,n){var r="value"in n&&"height"in n.value?n.value.height:h.settings.height,s="value"in n&&"character"in n.value?n.value.character:h.settings.character,i="value"in n&&"spaces"in n.value?n.value.spaces:h.settings.spaces;h.shavers.push({el:t,shaveFn:function(){console.log("shaving"),e(t,r,{character:s,spaces:i})}}),1===h.shavers.length&&window.addEventListener("resize",a)},unbind:function(e){h.removeShaver(e),0===h.shavers.length&&window.removeEventListener("resize",a)},inserted:function(e){h.runShaver(e)},componentUpdated:function(e){h.runShaver(e)}})},runShavers:function(){this.shavers.forEach(function(e){return e.shaveFn()})},runShaver:function(e){var t=this.getShaver(e);t&&t.shaveFn&&t.shaveFn()},getShaver:function(e){var t=this.shavers.filter(function(t){return t.el===e});return t.length?t[0]:null},removeShaver:function(e){this.shavers=this.shavers.filter(function(t){return t.el!==e})}}});